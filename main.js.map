{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/signin/signin.component.css","webpack:///./src/app/auth/signin/signin.component.html","webpack:///./src/app/auth/signin/signin.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/pasta/pasta.component.css","webpack:///./src/app/pasta/pasta.component.html","webpack:///./src/app/pasta/pasta.component.ts","webpack:///./src/app/pizza/build-own-pizza/build-own-pizza.component.css","webpack:///./src/app/pizza/build-own-pizza/build-own-pizza.component.html","webpack:///./src/app/pizza/build-own-pizza/build-own-pizza.component.ts","webpack:///./src/app/pizza/pizza-service.service.ts","webpack:///./src/app/pizza/pizza.component.css","webpack:///./src/app/pizza/pizza.component.html","webpack:///./src/app/pizza/pizza.component.ts","webpack:///./src/app/pizza/specialitypizza/specialitypizza.component.css","webpack:///./src/app/pizza/specialitypizza/specialitypizza.component.html","webpack:///./src/app/pizza/specialitypizza/specialitypizza.component.ts","webpack:///./src/app/pizza/specialitypizza/specialitypizza.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PizzaComponent } from './pizza/pizza.component';\r\nimport { PastaComponent } from './pasta/pasta.component';\r\nimport { BuildOwnPizzaComponent } from './pizza/build-own-pizza/build-own-pizza.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { SigninComponent } from './auth/signin/signin.component';\r\nimport { SpecialitypizzaComponent } from './pizza/specialitypizza/specialitypizza.component';\r\nimport { CartComponent } from './cart/cart.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: PizzaComponent},\r\n    { path: 'pizza', component: PizzaComponent},\r\n    { path: 'pasta', component: PastaComponent},\r\n    { path: 'build-own-pizza', component: BuildOwnPizzaComponent } ,\r\n    { path: 'signup', component: SignupComponent},\r\n    { path: 'signin', component: SigninComponent},\r\n    { path: 'speciality-pizza', component: SpecialitypizzaComponent},\r\n    { path: 'cart', component: CartComponent}\r\n\r\n  ];\r\n  \r\n  @NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class AppRoutingModule {\r\n  \r\n  }\r\n  ","module.exports = \"\"","module.exports = \"<app-header (selectedFeature)= \\\"onNavigation($event)\\\"></app-header>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit} from '@angular/core';\nimport * as firebase from 'firebase';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n loadedFeature = 'pizza';\n\n ngOnInit(){\n   firebase.initializeApp({\n    apiKey: \"\",\n    authDomain: \"mypizzaproject-f9768.firebaseapp.com\",\n   })\n\n }\n\n onNavigation(feature:string){\n  console.log(feature);\n   this.loadedFeature = feature;\n }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { PizzaComponent } from './pizza/pizza.component';\nimport { PastaComponent } from './pasta/pasta.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BuildOwnPizzaComponent } from './pizza/build-own-pizza/build-own-pizza.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth-guard.service';\nimport { FormsModule } from '@angular/forms';\nimport { SpecialitypizzaComponent } from './pizza/specialitypizza/specialitypizza.component';\nimport { CartComponent } from './cart/cart.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PizzaComponent,\n    PastaComponent,   \n    BuildOwnPizzaComponent,\n    SignupComponent,\n    SigninComponent,\n    SpecialitypizzaComponent,\n    CartComponent\n   \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.authService.isAuthenticated();\n  }\n}\n// export class AuthGuard{\n  \n// }\n"," import { Router } from '@angular/router';\n import * as firebase from 'firebase';\n import { Injectable } from '@angular/core';\n @Injectable()\nexport class AuthService {\n   token: string;\n\n \n\nconstructor(private router: Router) {}\n\n   signupUser(email: string, password: string) {\n     firebase.auth().createUserWithEmailAndPassword(email, password)\n       .catch(\n         error => console.log(error)\n      )\n   }\n\n   signinUser(email: string, password: string) {\n     firebase.auth().signInWithEmailAndPassword(email, password)\n       .then(\n         response => {\n        //    this.router.navigate(['/']);\n        //    firebase.auth().currentUser.getToken()\n        //      .then(\n        //       (token: string) => this.token = token\n        //      )\n         }\n       )\n       .catch(\n         error => console.log(error)\n       );\n   }\n\n   logout() {\n     firebase.auth().signOut();\n     this.token = null;\n   }\n\n  getToken() {\n    // firebase.auth().currentUser.getToken()\n    //   .then(\n    //     (token: string) => this.token = token\n    //   );\n    return this.token;\n  }\n\n  isAuthenticated() {\n    return this.token != null;\n  }\n}\n\n// export class AuthService {\n// }","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div >\\n    <form (ngSubmit)=\\\"onSignin(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Mail</label>\\n        <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          id=\\\"password\\\"\\n          name=\\\"password\\\"\\n          ngModel\\n          class=\\\"form-control\\\">\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Sign In</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSignin(form: NgForm) {\n    const email = form.value.email;\n    const password = form.value.password;\n    this.authService.signinUser(email, password);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div >\\n    <form (ngSubmit)=\\\"onSignup(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Mail</label>\\n        <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ngModel class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input\\n          type=\\\"password\\\"\\n          id=\\\"password\\\"\\n          name=\\\"password\\\"\\n          ngModel\\n          class=\\\"form-control\\\">\\n      </div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">Sign Up</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSignup(form: NgForm) {\n    // const email = form.value.email;\n    // const password = form.value.password;\n    // this.authService.signupUser(email, password);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  cart works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PizzaServiceService } from '../pizza/pizza-service.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(private pizzaService: PizzaServiceService) {\n    \n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a routerLink=\\\"/pizza\\\">PIZZA</a></li>\\n        <li><a routerLink=\\\"/pasta\\\" >PASTA</a></li>\\n        <li><a routerLink=\\\"/cart\\\" >CART</a></li>\\n        <li><a  routerLink=\\\"./signup\\\" >Register</a></li>\\n        <li><a routerLink=\\\"./signin\\\" >Login</a></li>\\n\\n      </ul>  \\n  </div>\\n</div>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Output() selectedFeature = new EventEmitter<string>();\n\n  onSelect(feature:string){\n    console.log(feature);\n    this.selectedFeature.emit(feature);\n    \n }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  pasta works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pasta',\n  templateUrl: './pasta.component.html',\n  styleUrls: ['./pasta.component.css']\n})\nexport class PastaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"BuildPizza(f)\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"container\\\">\\n        <div >\\n            <h3>Select the base:</h3>\\n            <select name=\\\"selectSize\\\" id=\\\"selectSize\\\" type=\\\"selectSize\\\"  ngModel >\\n              <option>small</option>\\n              <option>medium</option>\\n              <option>Large</option>\\n            </select>\\n            <hr>\\n      \\n            <h3>Select the Cheese:</h3>\\n            <select name=\\\"selectCheese\\\" id=\\\"selectCheese\\\" type=\\\"selectCheese\\\"  ngModel >\\n              <option>Mozirilla</option>\\n              <option>Blue Cheese</option>\\n            </select>\\n            <hr>\\n      \\n            <h3>Select the Sauce:</h3>\\n            <select name=\\\"selectSauce\\\" id=\\\"selectSauce\\\" type=\\\"selectSauce\\\"  ngModel >\\n              <option>Red Sauce</option>\\n              <option>BBQ Sauce</option>\\n              <option>Alfredo Sauce</option>\\n            </select>\\n            <hr>\\n      \\n            <h3>Select the toppings:</h3>\\n            <hr>     \\n              <input type=\\\"radio\\\" value=\\\"Onions\\\" name=\\\"toppingOnions\\\" id=\\\"toppingOnions\\\" [(ngModel)]=\\\"Onions\\\" >\\n                  Onions<br/>\\n              <input type=\\\"radio\\\" value=\\\"Tomato\\\" name=\\\"toppingTomato\\\" id=\\\"toppingTomato\\\"  [(ngModel)]=\\\"Tomato\\\" >\\n                  Tomato<br/>\\n              <input type=\\\"radio\\\" value=\\\"Mushrooms\\\" name=\\\"toppingMushrooms\\\" id=\\\"toppingMushrooms\\\" [(ngModel)]=\\\"Mushrooms\\\" >\\n                  Mushrooms<br/>\\n              \\n                  <hr>\\n                  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"  > Add to cart</button>\\n        </div>\\n        </div>\\n      \\n</form>\\n\\n     <!--\\n       <app-pizza-size (size)= \\\"selectedSize($event)\\\" ></app-pizza-size>\\n     --> \\n       \\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-build-own-pizza',\n  templateUrl: './build-own-pizza.component.html',\n  styleUrls: ['./build-own-pizza.component.css']\n})\nexport class BuildOwnPizzaComponent implements OnInit {\n\n  BuildPizza(form:NgForm){\n    console.log(form.value);\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { SpecialitypizzaComponent } from './specialitypizza/specialitypizza.component';\nimport { BuildOwnPizzaComponent } from './build-own-pizza/build-own-pizza.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PizzaServiceService {\n\n  constructor(private specialityPizza: SpecialitypizzaComponent,\n    private builtPizza:BuildOwnPizzaComponent) {\n\n\n     }\n\n     ngOnit(){\n       \n     }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div>\\n      <img src=\\\"./assets/pizza.jpg\\\">\\n    </div>\\n    <hr>\\n  \\n    <div class=\\\"col-xs-12\\\">\\n      <tr>\\n        <td>\\n            <button class=\\\"btn btn-primary\\\"\\n            routerLink=\\\"/build-own-pizza\\\">\\n             BUILD YOU OWN</button>\\n        </td>\\n        <td>\\n  \\n        </td>\\n        <td>\\n            <button class=\\\"btn btn-primary\\\" routerLink=\\\"/speciality-pizza\\\" >ORDER SPECIALITY PIZZA</button>\\n    \\n        </td>\\n         \\n  \\n      </tr>\\n  \\n      </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { PizzaModel } from './pizza.model';\n\n@Component({\n  selector: 'app-pizza',\n  templateUrl: './pizza.component.html',\n  styleUrls: ['./pizza.component.css']\n})\nexport class PizzaComponent implements OnInit {\n  // selSize=\"medium\";\n  // selectedSize(size:string){\n  //   console.log(size);\n  //   this.selSize = size;\n  // }\n\n  pizza:PizzaModel[]=[\n    \n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<form (ngSubmit)=\\\"AddingToCart(f)\\\" #f=\\\"ngForm\\\">\\n    <div class=\\\"container\\\"  >\\n        <ul class=\\\"list-group\\\">\\n            <a\\n              class=\\\"list-group-item\\\"\\n              style=\\\"cursor: pointer\\\"\\n              *ngFor=\\\"let specialitypizza of specialitypizzas\\\"\\n            >\\n            <tr>\\n              <td>\\n              <label name=\\\"pizzaName\\\" >\\n                <input type=\\\"radio\\\" value='{{ specialitypizza.name }}'  name=\\\"pizzaName\\\" id=\\\"pizzaName\\\" [(ngModel)]=\\\"pizzaName\\\" >\\n                {{ specialitypizza.name }}\\n                </label>\\n                ({{specialitypizza.Ingredient }}) \\n              </td>\\n\\n                            \\n              <td>\\n                <span class=\\\"pull-right\\\">\\n                  <img ngModel [src]=\\\"specialitypizza.pizzaImage \\\"  alt=\\\"{{ specialitypizza.pizzaImage }}\\\">\\n                </span>\\n              </td>\\n            </tr>       \\n            \\n              \\n             \\n              <select name=\\\"selectSize\\\" id=\\\"selectSize\\\" type=\\\"selectSize\\\"  ngModel >\\n                  <option>small</option>\\n                  <option>medium</option>\\n                  <option>Large</option>\\n                </select>\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"  > Add to cart</button>\\n            </a>\\n\\n          </ul>\\n          </div>\\n\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { specialitypizzamodel } from './specialitypizza.model';\n@Component({\n  selector: 'app-specialitypizza',\n  templateUrl: './specialitypizza.component.html',\n  styleUrls: ['./specialitypizza.component.css']\n})\n\n\nexport class SpecialitypizzaComponent implements OnInit {\n\n  specialitypizzas:specialitypizzamodel[]=[\n    new specialitypizzamodel('Garden Fresh','./assets/pizza.jpg','thin crust with onions and mushrooms'),\n    new specialitypizzamodel('Pepperoni Pizza','./assets/pizza.jpg','thin crust with beef, onions and mushrooms')\n  ];\n \n  \n  AddingToCart(form:NgForm)\n  {\n    const name = form.value.pizzaName;\n    const selectSize = form.value.selectSize;\n    console.log(form.value);\n    \n    return(form.value);\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class specialitypizzamodel{\r\n    constructor(public name:string, public pizzaImage:string, public Ingredient:string){\r\n\r\n    }\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}